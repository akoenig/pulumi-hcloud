// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides details about a Hetzner Cloud volume.
// This resource is useful if you want to use a non-terraform managed volume.
func LookupVolume(ctx *pulumi.Context, args *GetVolumeArgs) (*GetVolumeResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["id"] = args.Id
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["selector"] = args.Selector
		inputs["server"] = args.Server
		inputs["withSelector"] = args.WithSelector
		inputs["withStatuses"] = args.WithStatuses
	}
	outputs, err := ctx.Invoke("hcloud:index/getVolume:getVolume", inputs)
	if err != nil {
		return nil, err
	}
	return &GetVolumeResult{
		Id: outputs["id"],
		Labels: outputs["labels"],
		LinuxDevice: outputs["linuxDevice"],
		Location: outputs["location"],
		Name: outputs["name"],
		Selector: outputs["selector"],
		Server: outputs["server"],
		Size: outputs["size"],
		WithSelector: outputs["withSelector"],
		WithStatuses: outputs["withStatuses"],
	}, nil
}

// A collection of arguments for invoking getVolume.
type GetVolumeArgs struct {
	Id interface{}
	Location interface{}
	Name interface{}
	Selector interface{}
	Server interface{}
	WithSelector interface{}
	WithStatuses interface{}
}

// A collection of values returned by getVolume.
type GetVolumeResult struct {
	Id interface{}
	Labels interface{}
	LinuxDevice interface{}
	Location interface{}
	Name interface{}
	Selector interface{}
	Server interface{}
	Size interface{}
	WithSelector interface{}
	WithStatuses interface{}
}
