// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Hetzner Cloud SSH key resource to manage SSH keys for server access.
type SshKey struct {
	s *pulumi.ResourceState
}

// NewSshKey registers a new resource with the given unique name, arguments, and options.
func NewSshKey(ctx *pulumi.Context,
	name string, args *SshKeyArgs, opts ...pulumi.ResourceOpt) (*SshKey, error) {
	if args == nil || args.PublicKey == nil {
		return nil, errors.New("missing required argument 'PublicKey'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["labels"] = nil
		inputs["name"] = nil
		inputs["publicKey"] = nil
	} else {
		inputs["labels"] = args.Labels
		inputs["name"] = args.Name
		inputs["publicKey"] = args.PublicKey
	}
	inputs["fingerprint"] = nil
	s, err := ctx.RegisterResource("hcloud:index/sshKey:SshKey", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SshKey{s: s}, nil
}

// GetSshKey gets an existing SshKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshKey(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SshKeyState, opts ...pulumi.ResourceOpt) (*SshKey, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["fingerprint"] = state.Fingerprint
		inputs["labels"] = state.Labels
		inputs["name"] = state.Name
		inputs["publicKey"] = state.PublicKey
	}
	s, err := ctx.ReadResource("hcloud:index/sshKey:SshKey", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SshKey{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SshKey) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SshKey) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *SshKey) Fingerprint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["fingerprint"])
}

func (r *SshKey) Labels() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["labels"])
}

func (r *SshKey) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *SshKey) PublicKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["publicKey"])
}

// Input properties used for looking up and filtering SshKey resources.
type SshKeyState struct {
	Fingerprint interface{}
	Labels interface{}
	Name interface{}
	PublicKey interface{}
}

// The set of arguments for constructing a SshKey resource.
type SshKeyArgs struct {
	Labels interface{}
	Name interface{}
	PublicKey interface{}
}
