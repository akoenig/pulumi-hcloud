// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides details about a Hetzner Cloud Floating IP.
// 
// This resource can be useful when you need to determine a Floating IP ID based on the IP address.
// 
// ## Example Usage
// 
// # Data Source: hcloud_floating_ip
// Provides details about a Hetzner Cloud Floating IP.
// This resource can be useful when you need to determine a Floating IP ID based on the IP address.
func LookupFloatingIp(ctx *pulumi.Context, args *GetFloatingIpArgs) (*GetFloatingIpResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["id"] = args.Id
		inputs["ipAddress"] = args.IpAddress
		inputs["selector"] = args.Selector
		inputs["withSelector"] = args.WithSelector
	}
	outputs, err := ctx.Invoke("hcloud:index/getFloatingIp:getFloatingIp", inputs)
	if err != nil {
		return nil, err
	}
	return &GetFloatingIpResult{
		Description: outputs["description"],
		HomeLocation: outputs["homeLocation"],
		Id: outputs["id"],
		IpAddress: outputs["ipAddress"],
		IpNetwork: outputs["ipNetwork"],
		Labels: outputs["labels"],
		Selector: outputs["selector"],
		ServerId: outputs["serverId"],
		Type: outputs["type"],
		WithSelector: outputs["withSelector"],
	}, nil
}

// A collection of arguments for invoking getFloatingIp.
type GetFloatingIpArgs struct {
	Id interface{}
	IpAddress interface{}
	Selector interface{}
	WithSelector interface{}
}

// A collection of values returned by getFloatingIp.
type GetFloatingIpResult struct {
	Description interface{}
	HomeLocation interface{}
	Id interface{}
	IpAddress interface{}
	IpNetwork interface{}
	Labels interface{}
	Selector interface{}
	ServerId interface{}
	Type interface{}
	WithSelector interface{}
}
